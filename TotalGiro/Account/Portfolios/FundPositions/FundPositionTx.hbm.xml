<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="false" default-access="property">
	<class name="B4F.TotalGiro.Accounts.Portfolios.FundPositions.FundPositionTx, B4F.TotalGiro.Accounts" 
		   table="TGPositionsTx" 
		   proxy ="B4F.TotalGiro.Accounts.Portfolios.FundPositions.IFundPositionTx, B4F.TotalGiro.Interfaces" >
		<id name="Key" column="TGPositionsTxID" unsaved-value="0">
			<generator class="identity"/>
		</id>
		<timestamp name="lastUpdated" column="LastUpdated" access="field"/>
		<many-to-one name="ParentPosition" column="TGPositionID" class="B4F.TotalGiro.Accounts.Portfolios.FundPositions.FundPosition, B4F.TotalGiro.Accounts" />
		<many-to-one name="ParentTransaction" column="TGTransactionID" class="B4F.TotalGiro.Orders.Transactions.Transaction, B4F.TotalGiro.Orders" cascade="save-update" />
		<property name="TxSide" column="Side" type="B4F.TotalGiro.Orders.Transactions.TransactionSide, B4F.TotalGiro.Interfaces"/>
		<property name="ValueType" column="TGPositionsTxValueType" type="B4F.TotalGiro.Accounts.Portfolios.FundPositions.PositionsTxValueTypes, B4F.TotalGiro.Interfaces"/>
		<property name="Exported" column="Exported"/>
		<property name="creationDate" column="CreationDate" access="field" insert="false" update="false" type="DateTime" />
	</class>

	<query name="B4F.TotalGiro.Accounts.Portfolios.FundPositions.GetFundPositionTxs" >
		<![CDATA[
		from FundPositionTx P 
        left join fetch P.ParentTransaction T
        left join fetch T.ValueSize.Underlying
        left join fetch P.ParentPosition pos 
        left join fetch pos.Size.Underlying I 
        where pos.Account.Key = :accountId 
        and I.Key in (:pedigree)
		and T.StornoTransaction is null and T.IsStorno= :showStornos 
		order by T.TransactionDate DESC, I.Key DESC
		]]>
	</query>

	<query name="B4F.TotalGiro.Accounts.Portfolios.FundPositions.GetPositionTransactionsByDate" >
		<![CDATA[
			from FundPositionTx P 
			left join fetch P.ParentTransaction T
			left join fetch P.ParentPosition pos 
			where pos.Account.Key = :accountId 
			and pos.Size.Underlying.Key = :instrumentId 
			and T.TransactionDate <= :positionDate
		]]>
	</query>

</hibernate-mapping>
