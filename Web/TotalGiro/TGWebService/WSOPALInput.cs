// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.0
// Schema file: opalexport.xsd
// Creation Date: 3/30/2007 12:05:50 PM
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace B4F.Web.TGWebService
{


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ExpectedCapitalValueTypeCollection : ArrayList
	{
		public B4F.Web.TGWebService.ExpectedCapitalValueType Add(B4F.Web.TGWebService.ExpectedCapitalValueType obj)
		{
			base.Add(obj);
			return obj;
		}

		public B4F.Web.TGWebService.ExpectedCapitalValueType Add()
		{
			return Add(new B4F.Web.TGWebService.ExpectedCapitalValueType());
		}

		public void Insert(int index, B4F.Web.TGWebService.ExpectedCapitalValueType obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(B4F.Web.TGWebService.ExpectedCapitalValueType obj)
		{
			base.Remove(obj);
		}

		new public B4F.Web.TGWebService.ExpectedCapitalValueType this[int index]
		{
			get { return (B4F.Web.TGWebService.ExpectedCapitalValueType) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlType(TypeName="PortfolioType"),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class PortfolioType
	{

		[XmlElement(ElementName="PortfolioID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="integer")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __PortfolioID;
		
		[XmlIgnore]
		public string PortfolioID
		{ 
			get { return __PortfolioID; }
			set { __PortfolioID = value; }
		}

		[XmlElement(ElementName="PortfolioName",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __PortfolioName;
		
		[XmlIgnore]
		public string PortfolioName
		{ 
			get { return __PortfolioName; }
			set { __PortfolioName = value; }
		}

		[XmlElement(Type=typeof(CapitalObjective),ElementName="CapitalObjective",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public CapitalObjective __CapitalObjective;
		
		[XmlIgnore]
		public CapitalObjective CapitalObjective
		{
			get
			{
				if (__CapitalObjective == null) __CapitalObjective = new CapitalObjective();		
				return __CapitalObjective;
			}
			set {__CapitalObjective = value;}
		}

		public PortfolioType()
		{
		}
	}


	[XmlType(TypeName="CapitalObjective"),Serializable]
	public class CapitalObjective
	{

		[XmlElement(ElementName="ExpectedCapital",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ExpectedCapital;
		
		[XmlIgnore]
		public string ExpectedCapital
		{ 
			get { return __ExpectedCapital; }
			set { __ExpectedCapital = value; }
		}

		[XmlElement(ElementName="Probability",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __Probability;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ProbabilitySpecified;
		
		[XmlIgnore]
		public double Probability
		{ 
			get { return __Probability; }
			set { __Probability = value; __ProbabilitySpecified = true; }
		}

		[XmlElement(ElementName="GoodScenario",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __GoodScenario;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __GoodScenarioSpecified;
		
		[XmlIgnore]
		public double GoodScenario
		{ 
			get { return __GoodScenario; }
			set { __GoodScenario = value; __GoodScenarioSpecified = true; }
		}

		[XmlElement(ElementName="BadScenario",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __BadScenario;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __BadScenarioSpecified;
		
		[XmlIgnore]
		public double BadScenario
		{ 
			get { return __BadScenario; }
			set { __BadScenario = value; __BadScenarioSpecified = true; }
		}

		public CapitalObjective()
		{
		}
	}


	[XmlType(TypeName="ExpectedCapitalValueType"),Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ExpectedCapitalValueType
	{

		[XmlElement(ElementName="Year",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="integer")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Year;
		
		[XmlIgnore]
		public string Year
		{ 
			get { return __Year; }
			set { __Year = value; }
		}

		[XmlElement(ElementName="Value",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __Value;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ValueSpecified;
		
		[XmlIgnore]
		public double @Value
		{ 
			get { return __Value; }
			set { __Value = value; __ValueSpecified = true; }
		}

		public ExpectedCapitalValueType()
		{
		}
	}


	[XmlRoot(ElementName="Results",IsNullable=false),Serializable]
	public class Results
	{

		[XmlElement(ElementName="SchemaName",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __SchemaName;
		
		[XmlIgnore]
		public string SchemaName
		{ 
			get { return __SchemaName; }
			set { __SchemaName = value; }
		}

		[XmlElement(ElementName="Version",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Version;
		
		[XmlIgnore]
		public string Version
		{ 
			get { return __Version; }
			set { __Version = value; }
		}

		[XmlElement(ElementName="Timestamp",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="date")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DateTime __Timestamp;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __TimestampSpecified;
		
		[XmlIgnore]
		public DateTime Timestamp
		{ 
			get { return __Timestamp; }
			set { __Timestamp = value; __TimestampSpecified = true; }
		}
		
		[XmlIgnore]
		public DateTime TimestampUtc
		{ 
			get { return __Timestamp.ToUniversalTime(); }
			set { __Timestamp = value.ToLocalTime(); __TimestampSpecified = true; }
		}

		[XmlElement(Type=typeof(SelectedPortfolio),ElementName="SelectedPortfolio",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public SelectedPortfolio __SelectedPortfolio;
		
		[XmlIgnore]
		public SelectedPortfolio SelectedPortfolio
		{
			get
			{
				if (__SelectedPortfolio == null) __SelectedPortfolio = new SelectedPortfolio();		
				return __SelectedPortfolio;
			}
			set {__SelectedPortfolio = value;}
		}

		public Results()
		{
			__Timestamp = DateTime.Now;
		}
	}


	[XmlType(TypeName="SelectedPortfolio"),Serializable]
	public class SelectedPortfolio : B4F.Web.TGWebService.PortfolioType
	{

		[XmlElement(ElementName="ExpectedPerformance",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __ExpectedPerformance;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ExpectedPerformanceSpecified;
		
		[XmlIgnore]
		public double ExpectedPerformance
		{ 
			get { return __ExpectedPerformance; }
			set { __ExpectedPerformance = value; __ExpectedPerformanceSpecified = true; }
		}

		[XmlElement(ElementName="StandardDeviation",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __StandardDeviation;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __StandardDeviationSpecified;
		
		[XmlIgnore]
		public double StandardDeviation
		{ 
			get { return __StandardDeviation; }
			set { __StandardDeviation = value; __StandardDeviationSpecified = true; }
		}

		[XmlElement(ElementName="MinimalPerformance",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="double")]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public double __MinimalPerformance;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __MinimalPerformanceSpecified;
		
		[XmlIgnore]
		public double MinimalPerformance
		{ 
			get { return __MinimalPerformance; }
			set { __MinimalPerformance = value; __MinimalPerformanceSpecified = true; }
		}

		[XmlElement(Type=typeof(ExpectedCapitalValues),ElementName="ExpectedCapitalValues",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ExpectedCapitalValues __ExpectedCapitalValues;
		
		[XmlIgnore]
		public ExpectedCapitalValues ExpectedCapitalValues
		{
			get
			{
				if (__ExpectedCapitalValues == null) __ExpectedCapitalValues = new ExpectedCapitalValues();		
				return __ExpectedCapitalValues;
			}
			set {__ExpectedCapitalValues = value;}
		}

		public SelectedPortfolio() : base()
		{
		}
	}


	[XmlType(TypeName="ExpectedCapitalValues"),Serializable]
	public class ExpectedCapitalValues
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ExpectedCapitalValueCollection.GetEnumerator();
		}

		public B4F.Web.TGWebService.ExpectedCapitalValueType Add(B4F.Web.TGWebService.ExpectedCapitalValueType obj)
		{
			return ExpectedCapitalValueCollection.Add(obj);
		}

		[XmlIgnore]
		public B4F.Web.TGWebService.ExpectedCapitalValueType this[int index]
		{
			get { return (B4F.Web.TGWebService.ExpectedCapitalValueType) ExpectedCapitalValueCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ExpectedCapitalValueCollection.Count; }
        }

        public void Clear()
		{
			ExpectedCapitalValueCollection.Clear();
        }

		public B4F.Web.TGWebService.ExpectedCapitalValueType Remove(int index) 
		{ 
            B4F.Web.TGWebService.ExpectedCapitalValueType obj = ExpectedCapitalValueCollection[index];
            ExpectedCapitalValueCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ExpectedCapitalValueCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(B4F.Web.TGWebService.ExpectedCapitalValueType),ElementName="ExpectedCapitalValue",IsNullable=false,Form=XmlSchemaForm.Qualified)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ExpectedCapitalValueTypeCollection __ExpectedCapitalValueCollection;
		
		[XmlIgnore]
		public ExpectedCapitalValueTypeCollection ExpectedCapitalValueCollection
		{
			get
			{
				if (__ExpectedCapitalValueCollection == null) __ExpectedCapitalValueCollection = new ExpectedCapitalValueTypeCollection();
				return __ExpectedCapitalValueCollection;
			}
			set {__ExpectedCapitalValueCollection = value;}
		}

		public ExpectedCapitalValues()
		{
		}
	}
}
